$sizes: (
  'unit': 8px,

  'base': '#unit' ('times': 2),

  'root': '#base', // Used to calculate rem from px.

  'line-height-base': '#base' ('times': 1.5),

  'font-size-ui': '#base' ('times': 0.75, 'convert-units': 'rem'),
  'line-height-ui': '#base' ('times': 1, 'convert-units': 'rem'),
  'vh-adjust-ui': '#unit' ('times': 4/8),
  
  'font-size-h1': '#base' ('times': 2.625, 'convert-units': 'rem'),
  'line-height-h1': '#base' ('times': 3.5, 'convert-units': 'rem'),
  'vh-adjust-h1': '#unit' ('times': 5/8),
  
  'font-size-h2': '#base' ('times': 2, 'convert-units': 'rem'),
  'line-height-h2': '#base' ('times': 3.5, 'convert-units': 'rem'),
  'vh-adjust-h2': '#unit' ('times': 1/8),
  
  'font-size-h3': '#base' ('times': 1.5, 'convert-units': 'rem'),
  'line-height-h3': '#base' ('times': 2.5, 'convert-units': 'rem'),
  'vh-adjust-h3': '#unit' ('times': 4/8),
  
  'font-size-tag': '#base' ('times': 1.125, 'convert-units': 'rem'),
  'line-height-tag': '#base' ('times': 1.5, 'convert-units': 'rem'),
  'vh-adjust-tag': '#unit' ('times': 6/8),
  
  'font-size-p': '#base' ('times': 1, 'convert-units': 'rem'),
  'line-height-p': '#base' ('times': 1.5, 'convert-units': 'rem'),
  'vh-adjust-p': '#unit' ('times': 6/8),
  
  'font-size-p.article': '#base' ('times': 1.125, 'convert-units': 'rem'),
  'line-height-p.article': '#base' ('times': 2, 'convert-units': 'rem'),
  'vh-adjust-p.article': '#unit' ('times': 1/8),
  
  'font-size-code': '#font-size-p.article',
  'line-height-code': '#line-height-p.article',
  'vh-adjust-code': '#unit' ('times': 2/8),
  
  'font-size-p.summary': '#base' ('times': 0.875, 'convert-units': 'rem'),
  'line-height-p.summary': '#base' ('times': 1.5, 'convert-units': 'rem'),
  'vh-adjust-p.summary': '#unit' ('times': 7/8),

  'radius-small': 2px
);

/// Radius
/// @param {string} $token - Name of the size.
/// @return {number} - font-size with correct units.
@function radius($token) {
  @return size('radius-#{$token}');
}

/// FontSize
/// @param {string} $token - Name of the size.
/// @return {number} - font-size with correct units.
@function font-size($token) {
  @return size('font-size-#{$token}');
}

/// LineHeight
/// @param {string} $token - Name of the size.
/// @return {number} - font-size with correct units.
@function line-height($token) {
  $fullToken: 'line-height-#{$token}';
  
  @if (map-has-key($map: $sizes, $key: $fullToken)) {
    @return size($fullToken);
  }

  @return 1.5 * font-size($token);
}

@mixin font($token) {
  font-size: font-size($token);
  line-height: line-height($token);

  @include adjust-vertical-harmony(size('vh-adjust-#{$token}'));
}
